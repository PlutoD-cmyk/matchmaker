package org.plutodjava.matchmaker.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class TbUserIntentionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public TbUserIntentionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public TbUserIntentionExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public TbUserIntentionExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        TbUserIntentionExample example = new TbUserIntentionExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public TbUserIntentionExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public TbUserIntentionExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAgeRangeIsNull() {
            addCriterion("age_range is null");
            return (Criteria) this;
        }

        public Criteria andAgeRangeIsNotNull() {
            addCriterion("age_range is not null");
            return (Criteria) this;
        }

        public Criteria andAgeRangeEqualTo(String value) {
            addCriterion("age_range =", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeNotEqualTo(String value) {
            addCriterion("age_range <>", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeGreaterThan(String value) {
            addCriterion("age_range >", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeGreaterThanOrEqualTo(String value) {
            addCriterion("age_range >=", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeLessThan(String value) {
            addCriterion("age_range <", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeLessThanOrEqualTo(String value) {
            addCriterion("age_range <=", value, "ageRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAgeRangeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("age_range <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAgeRangeLike(String value) {
            addCriterion("age_range like", value, "ageRange");
            return (Criteria) this;
        }

        public Criteria andAgeRangeNotLike(String value) {
            addCriterion("age_range not like", value, "ageRange");
            return (Criteria) this;
        }

        public Criteria andAgeRangeIn(List<String> values) {
            addCriterion("age_range in", values, "ageRange");
            return (Criteria) this;
        }

        public Criteria andAgeRangeNotIn(List<String> values) {
            addCriterion("age_range not in", values, "ageRange");
            return (Criteria) this;
        }

        public Criteria andAgeRangeBetween(String value1, String value2) {
            addCriterion("age_range between", value1, value2, "ageRange");
            return (Criteria) this;
        }

        public Criteria andAgeRangeNotBetween(String value1, String value2) {
            addCriterion("age_range not between", value1, value2, "ageRange");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationIsNull() {
            addCriterion("minimum_education is null");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationIsNotNull() {
            addCriterion("minimum_education is not null");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationEqualTo(String value) {
            addCriterion("minimum_education =", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationNotEqualTo(String value) {
            addCriterion("minimum_education <>", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationGreaterThan(String value) {
            addCriterion("minimum_education >", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationGreaterThanOrEqualTo(String value) {
            addCriterion("minimum_education >=", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationLessThan(String value) {
            addCriterion("minimum_education <", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationLessThanOrEqualTo(String value) {
            addCriterion("minimum_education <=", value, "minimumEducation");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMinimumEducationLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("minimum_education <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMinimumEducationLike(String value) {
            addCriterion("minimum_education like", value, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationNotLike(String value) {
            addCriterion("minimum_education not like", value, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationIn(List<String> values) {
            addCriterion("minimum_education in", values, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationNotIn(List<String> values) {
            addCriterion("minimum_education not in", values, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationBetween(String value1, String value2) {
            addCriterion("minimum_education between", value1, value2, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andMinimumEducationNotBetween(String value1, String value2) {
            addCriterion("minimum_education not between", value1, value2, "minimumEducation");
            return (Criteria) this;
        }

        public Criteria andHeightRangeIsNull() {
            addCriterion("height_range is null");
            return (Criteria) this;
        }

        public Criteria andHeightRangeIsNotNull() {
            addCriterion("height_range is not null");
            return (Criteria) this;
        }

        public Criteria andHeightRangeEqualTo(String value) {
            addCriterion("height_range =", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeNotEqualTo(String value) {
            addCriterion("height_range <>", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeGreaterThan(String value) {
            addCriterion("height_range >", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeGreaterThanOrEqualTo(String value) {
            addCriterion("height_range >=", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeLessThan(String value) {
            addCriterion("height_range <", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeLessThanOrEqualTo(String value) {
            addCriterion("height_range <=", value, "heightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andHeightRangeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("height_range <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHeightRangeLike(String value) {
            addCriterion("height_range like", value, "heightRange");
            return (Criteria) this;
        }

        public Criteria andHeightRangeNotLike(String value) {
            addCriterion("height_range not like", value, "heightRange");
            return (Criteria) this;
        }

        public Criteria andHeightRangeIn(List<String> values) {
            addCriterion("height_range in", values, "heightRange");
            return (Criteria) this;
        }

        public Criteria andHeightRangeNotIn(List<String> values) {
            addCriterion("height_range not in", values, "heightRange");
            return (Criteria) this;
        }

        public Criteria andHeightRangeBetween(String value1, String value2) {
            addCriterion("height_range between", value1, value2, "heightRange");
            return (Criteria) this;
        }

        public Criteria andHeightRangeNotBetween(String value1, String value2) {
            addCriterion("height_range not between", value1, value2, "heightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeIsNull() {
            addCriterion("weight_range is null");
            return (Criteria) this;
        }

        public Criteria andWeightRangeIsNotNull() {
            addCriterion("weight_range is not null");
            return (Criteria) this;
        }

        public Criteria andWeightRangeEqualTo(String value) {
            addCriterion("weight_range =", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeNotEqualTo(String value) {
            addCriterion("weight_range <>", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeGreaterThan(String value) {
            addCriterion("weight_range >", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeGreaterThanOrEqualTo(String value) {
            addCriterion("weight_range >=", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeLessThan(String value) {
            addCriterion("weight_range <", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeLessThanOrEqualTo(String value) {
            addCriterion("weight_range <=", value, "weightRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andWeightRangeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("weight_range <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWeightRangeLike(String value) {
            addCriterion("weight_range like", value, "weightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeNotLike(String value) {
            addCriterion("weight_range not like", value, "weightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeIn(List<String> values) {
            addCriterion("weight_range in", values, "weightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeNotIn(List<String> values) {
            addCriterion("weight_range not in", values, "weightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeBetween(String value1, String value2) {
            addCriterion("weight_range between", value1, value2, "weightRange");
            return (Criteria) this;
        }

        public Criteria andWeightRangeNotBetween(String value1, String value2) {
            addCriterion("weight_range not between", value1, value2, "weightRange");
            return (Criteria) this;
        }

        public Criteria andIndustryIsNull() {
            addCriterion("industry is null");
            return (Criteria) this;
        }

        public Criteria andIndustryIsNotNull() {
            addCriterion("industry is not null");
            return (Criteria) this;
        }

        public Criteria andIndustryEqualTo(String value) {
            addCriterion("industry =", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryNotEqualTo(String value) {
            addCriterion("industry <>", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryGreaterThan(String value) {
            addCriterion("industry >", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryGreaterThanOrEqualTo(String value) {
            addCriterion("industry >=", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryLessThan(String value) {
            addCriterion("industry <", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryLessThanOrEqualTo(String value) {
            addCriterion("industry <=", value, "industry");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIndustryLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("industry <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIndustryLike(String value) {
            addCriterion("industry like", value, "industry");
            return (Criteria) this;
        }

        public Criteria andIndustryNotLike(String value) {
            addCriterion("industry not like", value, "industry");
            return (Criteria) this;
        }

        public Criteria andIndustryIn(List<String> values) {
            addCriterion("industry in", values, "industry");
            return (Criteria) this;
        }

        public Criteria andIndustryNotIn(List<String> values) {
            addCriterion("industry not in", values, "industry");
            return (Criteria) this;
        }

        public Criteria andIndustryBetween(String value1, String value2) {
            addCriterion("industry between", value1, value2, "industry");
            return (Criteria) this;
        }

        public Criteria andIndustryNotBetween(String value1, String value2) {
            addCriterion("industry not between", value1, value2, "industry");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeIsNull() {
            addCriterion("income_range is null");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeIsNotNull() {
            addCriterion("income_range is not null");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeEqualTo(String value) {
            addCriterion("income_range =", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeNotEqualTo(String value) {
            addCriterion("income_range <>", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeGreaterThan(String value) {
            addCriterion("income_range >", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeGreaterThanOrEqualTo(String value) {
            addCriterion("income_range >=", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeLessThan(String value) {
            addCriterion("income_range <", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeLessThanOrEqualTo(String value) {
            addCriterion("income_range <=", value, "incomeRange");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andIncomeRangeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("income_range <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIncomeRangeLike(String value) {
            addCriterion("income_range like", value, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeNotLike(String value) {
            addCriterion("income_range not like", value, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeIn(List<String> values) {
            addCriterion("income_range in", values, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeNotIn(List<String> values) {
            addCriterion("income_range not in", values, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeBetween(String value1, String value2) {
            addCriterion("income_range between", value1, value2, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andIncomeRangeNotBetween(String value1, String value2) {
            addCriterion("income_range not between", value1, value2, "incomeRange");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNull() {
            addCriterion("place is null");
            return (Criteria) this;
        }

        public Criteria andPlaceIsNotNull() {
            addCriterion("place is not null");
            return (Criteria) this;
        }

        public Criteria andPlaceEqualTo(String value) {
            addCriterion("place =", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceNotEqualTo(String value) {
            addCriterion("place <>", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThan(String value) {
            addCriterion("place >", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceGreaterThanOrEqualTo(String value) {
            addCriterion("place >=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThan(String value) {
            addCriterion("place <", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLessThanOrEqualTo(String value) {
            addCriterion("place <=", value, "place");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andPlaceLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("place <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPlaceLike(String value) {
            addCriterion("place like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotLike(String value) {
            addCriterion("place not like", value, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceIn(List<String> values) {
            addCriterion("place in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotIn(List<String> values) {
            addCriterion("place not in", values, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceBetween(String value1, String value2) {
            addCriterion("place between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andPlaceNotBetween(String value1, String value2) {
            addCriterion("place not between", value1, value2, "place");
            return (Criteria) this;
        }

        public Criteria andMarriageIsNull() {
            addCriterion("marriage is null");
            return (Criteria) this;
        }

        public Criteria andMarriageIsNotNull() {
            addCriterion("marriage is not null");
            return (Criteria) this;
        }

        public Criteria andMarriageEqualTo(String value) {
            addCriterion("marriage =", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageNotEqualTo(String value) {
            addCriterion("marriage <>", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageGreaterThan(String value) {
            addCriterion("marriage >", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageGreaterThanOrEqualTo(String value) {
            addCriterion("marriage >=", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageLessThan(String value) {
            addCriterion("marriage <", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageLessThanOrEqualTo(String value) {
            addCriterion("marriage <=", value, "marriage");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andMarriageLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("marriage <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMarriageLike(String value) {
            addCriterion("marriage like", value, "marriage");
            return (Criteria) this;
        }

        public Criteria andMarriageNotLike(String value) {
            addCriterion("marriage not like", value, "marriage");
            return (Criteria) this;
        }

        public Criteria andMarriageIn(List<String> values) {
            addCriterion("marriage in", values, "marriage");
            return (Criteria) this;
        }

        public Criteria andMarriageNotIn(List<String> values) {
            addCriterion("marriage not in", values, "marriage");
            return (Criteria) this;
        }

        public Criteria andMarriageBetween(String value1, String value2) {
            addCriterion("marriage between", value1, value2, "marriage");
            return (Criteria) this;
        }

        public Criteria andMarriageNotBetween(String value1, String value2) {
            addCriterion("marriage not between", value1, value2, "marriage");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(TbUserIntention.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_intention
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        private TbUserIntentionExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        protected Criteria(TbUserIntentionExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public TbUserIntentionExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table tb_user_intention
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_user_intention
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table tb_user_intention
         *
         * @mbg.generated
         */
        void example(org.plutodjava.matchmaker.db.domain.TbUserIntentionExample example);
    }
}